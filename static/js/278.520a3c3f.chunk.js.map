{"version":3,"file":"static/js/278.520a3c3f.chunk.js","mappings":"8PAuDA,UAhDe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,UAAY,GAC5CD,EACFE,EAAUF,GAEVT,EAAU,GAEb,GAAE,CAACM,IAEJ,IAAMK,EAAS,mCAAG,WAAMF,GAAN,8EAChBL,GAAa,GADG,mBAIKQ,EAAAA,EAAAA,IAAeH,GAJpB,OAIRI,EAJQ,OAKdb,EAAUa,EAAKC,SALD,gDAOdC,QAAQC,MAAR,MAPc,yBASdZ,GAAa,GATC,4EAAH,sDAkBf,OACE,2BACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAYa,SATK,SAAAR,GACvBP,EAASO,GACTF,EAAgB,CAAEN,MAAOQ,GAC1B,IAOQR,GAA2B,IAAlBF,EAAOmB,SAAgB,uBAAG,qBACnCnB,EAAOmB,OAAS,IAAK,SAAC,KAAD,CAAYnB,OAAQA,IACzCI,IAAa,SAAC,KAAD,UAKvB,C,sECnDYgB,E,QAAUC,EAAAA,QAAH,sE","sources":["pages/Movies/Movies.jsx","styles/Common.styled.jsx"],"sourcesContent":["import { Container } from '@mui/material';\r\nimport { Loader, MoviesList, SearchForm } from 'components';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { getSearchMovie } from 'service/api';\r\nimport { Section } from 'styles/Common.styled';\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    const queryParam = searchParams.get('query') || '';\r\n    if (queryParam) {\r\n      fetchData(queryParam);\r\n    } else {\r\n      setMovies([]);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  const fetchData = async queryParam => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const data = await getSearchMovie(queryParam);\r\n      setMovies(data.results);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = queryParam => {\r\n    setQuery(queryParam);\r\n    setSearchParams({ query: queryParam });\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Section>\r\n        <Container>\r\n          <SearchForm onSubmit={handleFormSubmit} />\r\n          {query && movies.length === 0 && <p>No movies found.</p>}\r\n          {movies.length > 0 && <MoviesList movies={movies} />}\r\n          {isLoading && <Loader />}\r\n        </Container>\r\n      </Section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section`\r\n  padding-top: 25px;\r\n  padding-bottom: 25px;\r\n`;\r\n"],"names":["useState","movies","setMovies","query","setQuery","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","queryParam","get","fetchData","getSearchMovie","data","results","console","error","onSubmit","length","Section","styled"],"sourceRoot":""}