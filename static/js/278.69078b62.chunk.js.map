{"version":3,"file":"static/js/278.69078b62.chunk.js","mappings":"8PA4DA,UArDe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,GACFE,EAAUF,EAEb,GAAE,CAACH,IAEJ,IAAMK,EAAS,mCAAG,WAAMF,GAAN,8EAChBL,GAAa,GADG,mBAIKQ,EAAAA,EAAAA,IAAeH,GAJpB,OAIRI,EAJQ,OAKdb,EAAUa,EAAKC,SALD,gDAOdZ,EAAS,KAAMa,SAPD,yBASdX,GAAa,GATC,4EAAH,sDAiBf,OACE,2BACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAYY,SARK,SAAAP,GACvBF,EAAgB,CAAEU,MAAOR,GAC1B,IAOmB,OAAXV,EACCA,EAAOmB,OAAS,GACd,SAAC,KAAD,CAAYnB,OAAQA,KAEpB,uBAAG,oBAGLI,IAAa,SAAC,KAAD,IAEdA,IAAa,SAAC,KAAD,IACbF,IAAS,uBAAG,0CAKtB,C,sECxDYkB,E,QAAUC,EAAAA,QAAH,sE","sources":["pages/Movies/Movies.jsx","styles/Common.styled.jsx"],"sourcesContent":["import { Container } from '@mui/material';\nimport { Loader, MoviesList, SearchForm } from 'components';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'service/api';\nimport { Section } from 'styles/Common.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const queryParam = searchParams.get('query');\n    if (queryParam) {\n      fetchData(queryParam);\n    }\n  }, [searchParams]);\n\n  const fetchData = async queryParam => {\n    setIsLoading(true);\n\n    try {\n      const data = await getSearchMovie(queryParam);\n      setMovies(data.results);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFormSubmit = queryParam => {\n    setSearchParams({ query: queryParam });\n  };\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <SearchForm onSubmit={handleFormSubmit} />\n          {movies !== null ? (\n            movies.length > 0 ? (\n              <MoviesList movies={movies} />\n            ) : (\n              <p>No movies found</p>\n            )\n          ) : (\n            isLoading && <Loader />\n          )}\n          {isLoading && <Loader />}\n          {error && <p>Oops... Something went wrong...</p>}\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding-top: 25px;\n  padding-bottom: 25px;\n`;\n"],"names":["useState","movies","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","queryParam","get","fetchData","getSearchMovie","data","results","message","onSubmit","query","length","Section","styled"],"sourceRoot":""}